<?php

namespace common\essences;

use Yii;

/**
 * This is the model class for table "recipe_result".
 *
 * @property int $id
 * @property int $item_id
 * @property int $machine_id
 * @property int $amount
 * @property string $name
 *
 * @property Recipe[] $recipes
 * @property Item $item
 * @property Machine $machine
 */
class RecipeResult extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'recipe_result';
    }

    public function beforeSave($insert)
    {
        if (!$this->name) {
            $this->name = $this->item->name;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['item_id', 'machine_id', 'amount'], 'integer'],
            [['name'], 'string', 'max' => 255],
            [['item_id'], 'exist', 'skipOnError' => true, 'targetClass' => Item::className(), 'targetAttribute' => ['item_id' => 'id']],
            [['machine_id'], 'exist', 'skipOnError' => true, 'targetClass' => Machine::className(), 'targetAttribute' => ['machine_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'item_id' => 'Item ID',
            'machine_id' => 'Machine ID',
            'amount' => 'Amount',
            'name' => 'Name',
        ];
    }

    public function getFullName()
    {
        return $this->machine->name . ' -> ' . $this->name;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRecipes()
    {
        return $this->hasMany(Recipe::className(), ['recipe_result_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getItem()
    {
        return $this->hasOne(Item::className(), ['id' => 'item_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMachine()
    {
        return $this->hasOne(Machine::className(), ['id' => 'machine_id']);
    }
}
